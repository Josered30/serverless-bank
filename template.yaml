AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  bank

  Sample SAM Template for Bank app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:
  TransactionEventsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: transaction_events
      AttributeDefinitions:
        - AttributeName: source
          AttributeType: S
        - AttributeName: id
          AttributeType: N
      KeySchema:
        - AttributeName: source
          KeyType: "HASH"
        - AttributeName: id
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      GlobalSecondaryIndexes:
        - IndexName: by-source
          KeySchema:
            - AttributeName: source
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1

  PaymentRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  DynamoDBPolicy: 
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: "DynamoDBPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:  
          - Effect: Allow
            Action: "dynamodb:PutItem"
            Resource: !GetAtt TransactionEventsTable.Arn
      Roles: 
        - !Ref PaymentRole

  PaymentRoleInstanceProfile: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Path: "/"
      Roles: 
        - !Ref PaymentRole

  ExecutePaymentFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Metadata:
      BuildMethod: rust-cargolambda # More info about Cargo Lambda: https://github.com/cargo-lambda/cargo-lambda
    Properties:
      FunctionName: execute-payment-function
      CodeUri: ./execute_payments # Points to dir of Cargo.toml
      Handler: bootstrap # Do not change, as this is the default executable name produced by Cargo Lambda
      Runtime: provided.al2023
      Role: !GetAtt PaymentRole.Arn
      Architectures:
        - arm64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /payments
            Method: post
      Environment:
        Variables: 
          TRANSACTION_EVENT_TABLE_NAME: !GetAtt TransactionEventsTable.Arn
          

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/payments/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt ExecutePaymentFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt ExecutePaymentFunction.Arn
