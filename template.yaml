AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  bank

  Sample SAM Template for Bank app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:
  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: users
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: "HASH" 
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
       
  TransactionEventsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: transaction_events
      AttributeDefinitions:
        - AttributeName: source
          AttributeType: S
        - AttributeName: id
          AttributeType: N
      KeySchema:
        - AttributeName: source
          KeyType: "HASH"
        - AttributeName: id
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      GlobalSecondaryIndexes:
        - IndexName: by-source
          KeySchema:
            - AttributeName: source
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1

  ExecutePaymentStfRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /

  ExecutePaymentLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  DynamoDBPolicy: 
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: "DynamoDBPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:  
          - Effect: Allow
            Action: "dynamodb:PutItem"
            Resource: !GetAtt TransactionEventsTable.Arn
          - Effect: Allow
            Action: "dynamodb:GetItem"
            Resource: !GetAtt UserTable.Arn
      Roles: 
        - !Ref ExecutePaymentLambdaRole
        - !Ref ExecutePaymentStfRole

  InvokeLambdaPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "InvokeLambdaPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "lambda:InvokeFunction"
            Resource: !GetAtt ExecutePaymentFunction.Arn
      Roles:
        - !Ref ExecutePaymentStfRole

  PaymentRoleInstanceProfile: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Path: "/"
      Roles: 
        - !Ref ExecutePaymentLambdaRole

  ExecutePaymentFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Metadata:
      BuildMethod: rust-cargolambda # More info about Cargo Lambda: https://github.com/cargo-lambda/cargo-lambda
    Properties:
      FunctionName: execute-payment-function
      CodeUri: ./execute_payments # Points to dir of Cargo.toml
      Handler: bootstrap # Do not change, as this is the default executable name produced by Cargo Lambda
      Runtime: provided.al2023
      Role: !GetAtt ExecutePaymentLambdaRole.Arn
      Architectures:
        - arm64
      Environment:
        Variables: 
          TRANSACTION_EVENT_TABLE_NAME: !GetAtt TransactionEventsTable.Arn

  ExecutePaymentStepFunction:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: post-transaction-sf
      DefinitionSubstitutions:
        UserTableArn: !GetAtt UserTable.Arn
        ExecutePaymentLambdaArn: !GetAtt ExecutePaymentFunction.Arn
      DefinitionUri: statemachine/post_transaction.json
      Role: !GetAtt ExecutePaymentStfRole.Arn

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ExecutePaymentFunctionOutput:
    Description: "Execute Payment Lambda Function ARN"
    Value: !GetAtt ExecutePaymentFunction.Arn
  ExecutePaymentStepFunctionOutput:
    Description: "Execute Payment Step Function ARN"
    Value: !GetAtt ExecutePaymentStepFunction.Arn
  ExecutePaymentIamRoleOutput:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt ExecutePaymentFunction.Arn
